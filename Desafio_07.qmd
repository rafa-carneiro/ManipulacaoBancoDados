---
title: "Desafio 07"
author: "Rafael Gomes Carneiro"
format: pdf
editor: visual
---

# Aula 18/09

```{r setup}

library(RSQLite)
library(tidyverse)
library(dbplyr)
```

```{r}
if(!"discoCopy.db" %in% list.files("../dados/")){
  file.copy("../dados/disco.db", "../dados/discoCopy.db")
}

db <- dbConnect(SQLite(), "../dados/discoCopy.db")
```

```{r}
dbListTables(db)
```

```{r}
dbExecute(db, "DROP TABLE IF EXISTS instruments") # Codigo para o pdf funcionar
```

```{r}
tab.inst <- "CREATE TABLE instruments
               (AlbumId INTEGER,
                TrackId INTEGER,
                ElectricGuitar INTEGER,
                Singer INTEGER,
                Trumpet INTEGER)"

dbExecute(db, tab.inst)
```

```{r}
dbListFields(db, 'instruments')
```

```{r}
dbExecute(db, "DROP TABLE instruments")
```

```{r}
aname = "Gilberto Gil"
sql = paste0("SELECT ArtistId FROM artists ",
             "WHERE Name = '", aname, "'")
aId = dbGetQuery(db, sql)
sql = paste('SELECT Title FROM albums',
            'WHERE ArtistId =', aId)
dbGetQuery(db, sql)
```

```{r}
dbExecute(db, tab.inst)
```

```{r}
dbListFields(db, 'instruments')
```

```{r}
sql2 = paste('SELECT TrackId, Name FROM tracks',
            'WHERE AlbumId = 85')
dbGetQuery(db, sql2) %>% head
```

```{r}
dbExecute(db, "INSERT INTO instruments 
               VALUES ('85', '1075', 0, 1, 0), 
                      ('85', '1078', 0, 1, 0); ")
```

```{r}
dbGetQuery(db, "SELECT * FROM instruments")
```

```{r}
dbExecute(db, "DROP TABLE IF EXISTS mtcars") # Codigo para o pdf funcionar
```

```{r}
dbWriteTable(db, "mtcars", mtcars)
dbListTables(db)
```

```{r}
dbGetQuery(db, "SELECT * FROM mtcars") %>% head(3)
```

```{r}
theAvgCar <- mtcars %>% 
  summarise_all(function(x) round(mean(x), 2))
theAvgCar
```

```{r}
dbWriteTable(db, "mtcars", theAvgCar, append = TRUE)
dbGetQuery(db, "SELECT * FROM mtcars") %>% tail(3)
```

```{r}
res <- dbSendQuery(db, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
  chunk <- dbFetch(res, n = 5)
  print(nrow(chunk))
}
```

```{r}
dbClearResult(res)
```

```{r}
dbDisconnect(db)
```

```{r}
if("discoCopy.db" %in% list.files("../dados/")){
  file.remove("../dados/discoCopy.db")
}
```

```{r}
airports <- read_csv("../dados/airports.csv", col_types = "cccccdd")
airlines <- read_csv("../dados/airlines.csv", col_types = "cc")
air <- dbConnect(SQLite(), dbname = "../dados/air.db")
dbWriteTable(air, name = "airports", airports)
dbWriteTable(air, name = "airlines", airlines)
dbListTables(air) 
```

```{r}
dbListFields(air, "airports")
```

```{r}
dbDisconnect(air)
if("air.db" %in% list.files("../dados/")){
  file.remove("../dados/air.db")
}
```

```{r}
db <- dbConnect(SQLite(), "../dados/disco.db") # original
tracks <- tbl(db, "tracks") # dplyr
tracks %>% head(3)
```

```{r}
meanTracks <- tracks %>% 
  group_by(AlbumId) %>%
  summarise(AvLen = mean(Milliseconds, na.rm = TRUE), 
            AvCost = mean(UnitPrice, na.rm = TRUE))
meanTracks
```

```{r}
meanTracks %>% show_query()
```

```{r}
mT <- meanTracks %>% collect()
mT
```

```{r}
dbDisconnect(db)
```
